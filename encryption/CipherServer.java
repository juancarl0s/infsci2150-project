import java.io.*;
import java.net.*;
import java.security.*;
import javax.crypto.*;

public class CipherServer
{
	public static void main(String[] args) throws Exception
	{
		int port = 7999;
		ServerSocket server = new ServerSocket(port);
		Socket s = server.accept();

		// delete this
		// System.in.read();

		// YOU NEED TO DO THESE STEPS:
		// -Read the key from the file generated by the client.
		ObjectInputStream in = new ObjectInputStream(new FileInputStream("KeyFile.xx"));

		Key key = null;

		key = (Key) in.readObject();

		in.close();

		// -Use the key to decrypt the incoming message from socket s.
		Cipher dcipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
		dcipher.init(Cipher.DECRYPT_MODE, key);

		CipherInputStream dcipherIn = new CipherInputStream(s.getInputStream(), dcipher);
		// cipherIn.read()

		ByteArrayOutputStream os = new ByteArrayOutputStream();


		File file = new File("KeyFile.xx");
	    byte[] buf = new byte[100];

		System.out.println("Count:" + ((int) file.length()));

		// byte[] buf = new byte[(int) file.length()];

		// String message = "";

		int bytesRead = 0;
		int bytesReadOffset = 0;
		try {
			// int count = 0;
			// while ((dcipherIn.read(buf)) >= 0) {
			// 	count++;
			//
		    // 	// os.write(buf, 0, numRead);
			// 	System.out.println("Count:" + count);
			// }

			while ((bytesRead=dcipherIn.read(buf)) >= 0) {
				System.out.println("bytesRead: " + bytesRead);
				System.out.println("bytesReadOffset: " + bytesReadOffset);

				bytesReadOffset = bytesReadOffset + bytesRead;
		    	os.write(buf, bytesReadOffset, bytesRead);

				String message = new String(buf);
				System.out.println("Message: " + message + "& " + bytesReadOffset);
				//
				System.out.println("------------------------------------");
			}

		os.close();

		dcipherIn.close();
		//
		// in.close();

		}catch (Exception e)
    	{
    		e.printStackTrace();
    	}

		System.out.println("Buffer length:" + buf.length);


		String message = new String(buf);


		// -Print out the decrypt String to see if it matches the orignal message.
		System.out.println("Message: " + message + " FINAL");

		System.exit(0);
	}
}
